/*
Problem Description
Given a string A, find if there is any subsequence that repeats itself.

A subsequence of a string is defined as a sequence of characters generated by deleting some characters in the string without changing the order of the remaining characters.

NOTE:
1. Subsequence length should be greater than or equal to 2.
2. The repeating subsequence should be disjoint that is in both the sequence no character in the same order and position should be taken from the same index of the original string.

Problem Constraints
1 <= length(A) <= 100

Input Format
The first and the only argument of input contains a string A.
*/

function anyTwo(A) {
  let n = A.length;
  let dp = new Array(n + 1);
  for (let i = 0; i < n + 1; i++) {
    dp[i] = new Array(n + 1).fill(0);
  }
  for (let i = 1; i < n + 1; i++) {
    for (let j = i + 1; j < n + 1; j++) {
      if (A.charAt(i - 1) == A.charAt(j - 1)) {
        dp[i][j] = dp[i - 1][j - 1] + 1;
      } else {
        dp[i][j] = Math.max(dp[i - 1][j] || 0, dp[i][j - 1] || 0);
      }
    }
  }
  for (let i = 0; i < n + 1; i++) {
    for (let j = 0; j < n + 1; j++) {
      if (dp[i][j] > 1) return 1;
    }
  }
  return 0;
}

console.log(anyTwo('abab'));
console.log(anyTwo('abba'));
